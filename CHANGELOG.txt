Details of changes made to refnx
================================

0.1.1
-----
- removal of Python 2.7 support
- added azure pipelines for faster windows CI
- remove `uncertainties` as a package dependency (it's still used for testing)
- remove `six` as a package dependency
- add `refnx.util.refplot` for quick plotting of reflectometry datasets
- fixed various deprecation warnings
- added the ability to mask (hide) points in a `refnx.dataset.Data1D` dataset

0.1.2
-----
- added save/load model buttons in the interactive reflectometry modeller.
- removed `from __future__ import ...` statements as refnx is now solely Py3
- added `cython: language_level=3` statements to cython code
- marked cython extensions as c++ language
- smarter (faster) cataloging of NeXUS files
- removed pandas as a strict dependency, as it's only required for reduction,
  not analysis
- improved documentation of the ManualBeamFinder
- adding a pyqt based GUI (alpha state)
- improved __repr__ of many classes
- Start the GUI via a 'refnx' console command, via a setup.py entry_point.

0.1.3
-----
- GUI machinery can now use Components other than Slab, such as LipidLeaflet
  (already added). New Components may require extra shim code to be written for
  them. Specifically how they're to be displayed, and a default way of
  initialising the Component (which may require a dialogue).
- The 'Link equivalent parameters' action has been added, enabling equivalent
  parameters on other datasets to be linked. This greatly aids setup of multiple
  contrast datasets. All the datasets to be linked must have the same type of
  structure.
- The initialisation of a LipidLeaflet is made much easier by using a library
  of lipid head/volumes and scattering lengths for popular lipids which are
  presented to the user in an initialisation dialogue.
- The refnx paper is accepted and the article and manuscript file are
  included in the repository.
- The pyqt GUI to refnx can be made into standalone executables for Windows,
  macOS.
- Fixed a bug that meant most reflectivity calculations were single-threaded
  instead of multi-threaded.
- Added MixedReflectModel to the pyqt GUI, allowing one to model 'patchy'
  systems, i.e. incoherent averaging of reflectivities.
- BACKWARDS INCOMPATIBLE CHANGE: the slabs properties of `Component` and
  `Structure` have now been changed to methods, taking the optional `structure`
  kwd parameter. The reason for this is so each `Component` knows what kind of
  `Structure` it is in.
- The Spline Component can be used within the pyqt GUI.
- In the pyqt gui Components can be re-ordered within their host structure by
  drag/drop. Dragging to other Structures copies the Component to that
  structure.
- Added the Stack Component. A Stack contains a series of Components, and the
  Stack.repeats attribute can be used to produce a multilayer repeat structure.
- Folded in a reduction pyqt gui for Platypus data. The app was already in the
  slim directory. It's now available from refnx.reduce.gui

0.1.4
-----
- fixed bug in reflectivity calculation with significant non-zero absorption.
  The wavevector calculation was using the wrong branch of the complex sqrt.

0.1.5
-----
- fixed font size in pyqt GUI.
- script export from pyqt GUI can use either multiprocessing or MPI for
  parallelisation during MCMC sampling.
- speeded up reflectivity calculation, following on from changes made in 0.1.4
  (if the imaginary part of a complex sqrt argument is very small, then the C++
  calculation takes a lot longer).
- added a plot method to PlatypusNexus
- refactor util.PoolWrapper to util.MapWrapper
- allow the number of Stack repeats to be fittable.
- GUI option to only display those parameters (and datasets) that are going to
  be varied in a fit.
- update testimonials.bib
- "to code" button in Jupyter interactive modeller respects the transform
  popup.

0.1.6
-----
- When parameters are linked in the refnx GUI only the dataset containing the
  master parameter was being updated (reflectivity/SLD curves) when the master
  was changed. Now all datasets that have parameters linked to the master
  parameter (a constraint) are updated.
- When a dataset/component/structure containing a master parameter (i.e. a
  parameter to which other parameters are constrained to) is removed, the GUI
  now unlinks those dependent parameters from the master parameter.
- display number of iterations in GUI progress box. If fit is aborted put best
  fit so far into Objective that's being fitted.
- fixed crash resulting from the use of a comma when entering a floating point
  number. Entering '3,1' would crash the gui, using '3.1' would work but be
  displayed as '3,1'. The use of a dot as a decimal point is now enforced.

0.1.7
-----
- print human readable output when fitting with the Jupyter interactive
  modeller.
- added shgo and dual_annealing minimiser options to the refnx gui.
- SLD calculator retains state between viewings.
- Added dialogue to adjust optimisation parameters.
- Fixed bug in export of MCMC code fragment, Gui would crash.
