environment:

  # SDK v7.0 MSVC Express 2008's SetEnv.cmd script will fail if the
  # /E:ON and /V:ON options are not enabled in the batch script interpreter
  # See: http://stackoverflow.com/a/13751649/163740
  CMD_IN_ENV: "cmd /E:ON /V:ON /C obvci_appveyor_python_build_env.cmd"

  # Workaround for https://github.com/conda/conda-build/issues/636
  PYTHONIOENCODING: "UTF-8"

  matrix:
    # Note: Because we have to separate the py2 and py3 components due to compiler version, we have a race condition for non-python packages.
    # Not sure how to resolve this, but maybe we should be tracking the VS version in the build string anyway?
    - TARGET_ARCH: x64
      CONDA_NPY: 114
      CONDA_PY: 37
      PYTHON_VERSION: 3.7
      CONDA_INSTALL_LOCN: C:\\Miniconda36-x64
      
    - TARGET_ARCH: x86
      CONDA_NPY: 114
      CONDA_PY: 37
      PYTHON_VERSION: 3.7
      CONDA_INSTALL_LOCN: C:\\Miniconda36-x64

    - TARGET_ARCH: x64
      CONDA_NPY: 113
      CONDA_PY: 27
      PYTHON_VERSION: 2.7
      CONDA_INSTALL_LOCN: C:\\Miniconda-x64

# We always use a 64-bit machine, but can build x86 distributions
# with the TARGET_ARCH variable (which is used by CMD_IN_ENV).
platform:
    - x64

install:
    # Set the CONDA_NPY, although it has no impact on the actual build. We need this because of a test within conda-build.
    - cmd: set CONDA_NPY=19

    # Remove cygwin (and therefore the git that comes with it).
    - cmd: rmdir C:\cygwin /s /q

    # Add path, activate `conda` and update conda.
    - cmd: call %CONDA_INSTALL_LOCN%\Scripts\activate.bat
    - cmd: set PYTHONUNBUFFERED=1

    # Add our channels.
    - cmd: conda.exe config --set show_channel_urls true
    - cmd: conda.exe update --yes --quiet conda

    # create conda environment
    - cmd: call conda.exe create --yes -n test python=%PYTHON_VERSION%
    - cmd: call %CONDA_INSTALL_LOCN%\Scripts\activate.bat test
    - cmd: call conda.exe info --envs

    # Configure the VM.
    - cmd: call conda.exe install --yes --quiet numpy scipy h5py cython six traitlets ipywidgets xlrd pandas pytest
    - pip install corner uncertainties matplotlib IPython

build_script:
    # Build the compiled extension
    - python setup.py install

test_script:
    # Run the project tests
    - cmd: set "REQUIRE_C=1"
    - pytest

after_test:
    # If tests are successful, create binary packages for the project.
    - python setup.py bdist_wheel
    - ps: "ls dist"

artifacts:
    # Archive the generated packages in the ci.appveyor.com build report.
    - path: dist\*.whl